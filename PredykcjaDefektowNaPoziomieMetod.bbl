\begin{thebibliography}{10}

\bibitem{26479}
Ieee guide for the use of ieee standard dictionary of measures to produce
  reliable software.
\newblock {\em IEEE Std 982.2-1988}, 1989.

\bibitem{749159}
Ieee standard for a software quality metrics methodology.
\newblock {\em IEEE Std 1061-1998}, 1998.

\bibitem{arisholm2010systematic}
Arisholm E., Briand L.~C., Johannessen E.~B.
\newblock A systematic and comprehensive investigation of methods to build and
  evaluate fault prediction models.
\newblock {\em Journal of Systems and Software}, 83(1):2--17, 2010.

\bibitem{BCDG+07}
Berthold M.~R., Cebron N., Dill F., Gabriel T.~R., K\"{o}tter T., Meinl T., Ohl
  P., Sieb C., Thiel K., Wiswedel B.
\newblock {KNIME}: The {K}onstanz {I}nformation {M}iner.
\newblock W: {\em Studies in Classification, Data Analysis, and Knowledge
  Organization (GfKL 2007)}. Springer, 2007.

\bibitem{bevan2005facilitating}
Bevan J., Whitehead~Jr E.~J., Kim S., Godfrey M.
\newblock Facilitating software evolution research with kenyon.
\newblock W: {\em ACM SIGSOFT Software Engineering Notes}, 30(5):177--186. ACM,
  2005.

\bibitem{catal2009systematic}
Catal C., Diri B.
\newblock A systematic review of software fault prediction studies.
\newblock {\em Expert systems with applications}, 36(4):7346--7354, 2009.

\bibitem{chidamber1994metrics}
Chidamber S.~R., Kemerer C.~F.
\newblock A metrics suite for object oriented design.
\newblock {\em Software Engineering, IEEE Transactions on}, 20(6):476--493,
  1994.

\bibitem{concas2011distribution}
Concas G., Marchesi M., Murgia A., Tonelli R., Turnu I.
\newblock On the distribution of bugs in the eclipse system.
\newblock {\em Software Engineering, IEEE Transactions on}, 37(6):872--877,
  2011.

\bibitem{d2010extensive}
D'Ambros M., Lanza M., Robbes R.
\newblock An extensive comparison of bug prediction approaches.
\newblock W: {\em Mining Software Repositories (MSR), 2010 7th IEEE Working
  Conference on},  31--41. IEEE, 2010.

\bibitem{d2012evaluating}
D'Ambros M., Lanza M., Robbes R.
\newblock Evaluating defect prediction approaches: a benchmark and an extensive
  comparison.
\newblock {\em Empirical Software Engineering}, 17(4-5):531--577, 2012.

\bibitem{dyer2013declarative}
Dyer R., Rajan H., Nguyen T.~N.
\newblock Declarative visitors to ease fine-grained source code mining with
  full history on billions of ast nodes.
\newblock W: {\em Proceedings of the 12th international conference on
  Generative programming: concepts \& experiences},  23--32. ACM, 2013.

\bibitem{endres2003handbook}
Endres A., Rombach H.~D.
\newblock {\em A handbook of software and systems engineering: empirical
  observations, laws and theories}.
\newblock Pearson Education, 2003.

\bibitem{ferzund2009empirical}
Ferzund J., Ahsan S.~N., Wotawa F.
\newblock Empirical evaluation of hunk metrics as bug predictors.
\newblock W: {\em Software Process and Product Measurement},  242--254.
  Springer, 2009.

\bibitem{ferzund2009software}
Ferzund J., Ahsan S.~N., Wotawa F.
\newblock Software change classification using hunk metrics.
\newblock W: {\em Software Maintenance, 2009. ICSM 2009. IEEE International
  Conference on},  471--474. IEEE, 2009.

\bibitem{fluri2007change}
Fluri B., Wursch M., PInzger M., Gall H.~C.
\newblock Change distilling: Tree differencing for fine-grained source code
  change extraction.
\newblock {\em Software Engineering, IEEE Transactions on}, 33(11):725--743,
  2007.

\bibitem{gantz2012digital}
Gantz J., Reinsel D.
\newblock The digital universe in 2020: Big data, bigger digital shadows, and
  biggest growth in the far east.
\newblock {\em IDC iView: IDC Analyze the Future}, 2012.

\bibitem{giger2012method}
Giger E., D'Ambros M., Pinzger M., Gall H.~C.
\newblock Method-level bug prediction.
\newblock W: {\em Proceedings of the ACM-IEEE international symposium on
  Empirical software engineering and measurement},  171--180. ACM, 2012.

\bibitem{giger2011comparing}
Giger E., Pinzger M., Gall H.~C.
\newblock Comparing fine-grained source code changes and code churn for bug
  prediction.
\newblock W: {\em Proceedings of the 8th Working Conference on Mining Software
  Repositories},  83--92. ACM, 2011.

\bibitem{godfrey2005using}
Godfrey M.~W., Zou L.
\newblock Using origin analysis to detect merging and splitting of source code
  entities.
\newblock {\em Software Engineering, IEEE Transactions on}, 31(2):166--181,
  2005.

\bibitem{goodman1961snowball}
Goodman L.~A.
\newblock Snowball sampling.
\newblock {\em The annals of mathematical statistics},  148--170, 1961.

\bibitem{gorski2000inzynieria}
G{\'o}rski J.
\newblock {\em In{\.z}ynieria oprogramowania: w projekcie informatycznym}.
\newblock Wydaw. MIKOM, 2000.

\bibitem{hall2012systematic}
Hall T., Beecham S., Bowes D., Gray D., Counsell S.
\newblock A systematic literature review on fault prediction performance in
  software engineering.
\newblock {\em Software Engineering, IEEE Transactions on}, 38(6):1276--1304,
  2012.

\bibitem{hassan2004c}
Hassan A.~E., Holt R.~C.
\newblock C-rex: an evolutionary code extractor for c.
\newblock W: {\em CSER Meeting}. Citeseer, 2004.

\bibitem{hata2012fault}
Hata H.
\newblock Fault-prone module prediction using version histories.
\newblock 2012.

\bibitem{hata2010reconstructing}
Hata H., Mizuno O., Kikuno T.
\newblock Reconstructing fine-grained versioning repositories with git for
  method-level bug prediction.
\newblock {\em IWESEP '10},  27--32, 2010.

\bibitem{hata2011historage}
Hata H., Mizuno O., Kikuno T.
\newblock Historage: fine-grained version control system for java.
\newblock W: {\em Proceedings of the 12th International Workshop on Principles
  of Software Evolution and the 7th annual ERCIM Workshop on Software
  Evolution},  96--100. ACM, 2011.

\bibitem{hata2012bug}
Hata H., Mizuno O., Kikuno T.
\newblock Bug prediction based on fine-grained module histories.
\newblock W: {\em Proceedings of the 2012 International Conference on Software
  Engineering},  200--210. IEEE Press, 2012.

\bibitem{kamei2010revisiting}
Kamei Y., Matsumoto S., Monden A., Matsumoto K.-i., Adams B., Hassan A.~E.
\newblock Revisiting common bug prediction findings using effort-aware models.
\newblock W: {\em Software Maintenance (ICSM), 2010 IEEE International
  Conference on},  1--10. IEEE, 2010.

\bibitem{kan2002metrics}
Kan S.~H.
\newblock {\em Metrics and models in software quality engineering}.
\newblock Addison-Wesley Longman Publishing Co., Inc., 2002.

\bibitem{koru2008theory}
Koru A.~G., El~Emam K., Zhang D., Liu H., Mathew D.
\newblock Theory of relative defect proneness.
\newblock {\em Empirical Software Engineering}, 13(5):473--498, 2008.

\bibitem{lessmann2008benchmarking}
Lessmann S., Baesens B., Mues C., Pietsch S.
\newblock Benchmarking classification models for software defect prediction: A
  proposed framework and novel findings.
\newblock {\em Software Engineering, IEEE Transactions on}, 34(4):485--496,
  2008.

\bibitem{DBLP:2014:Online}
Ley M., Herbstritt M., Ackermann M.~R., Hoffmann O., Wagner M., von Keutz S.,
  Hostert K.
\newblock Dblp bibliography, 2014.

\bibitem{liaw2002classification}
Liaw A., Wiener M.
\newblock Classification and regression by randomforest.
\newblock {\em R news}, 2(3):18--22, 2002.

\bibitem{madeyski2014process}
Madeyski L., Jureczko M.
\newblock Which process metrics can significantly improve defect prediction
  models? an empirical study.
\newblock {\em Software Quality Journal}, 23(3):393--422, 2014.

\bibitem{madeyski2014software}
Madeyski L., Majchrzak M.
\newblock Software measurement and defect prediction with depress extensible
  framework.
\newblock {\em Foundations of Computing and Decision Sciences}, 39(4):249--270,
  2014.

\bibitem{mende2009revisiting}
Mende T., Koschke R.
\newblock Revisiting the evaluation of defect prediction models.
\newblock W: {\em Proceedings of the 5th International Conference on Predictor
  Models in Software Engineering}, ~7. ACM, 2009.

\bibitem{mende2010effort}
Mende T., Koschke R.
\newblock Effort-aware defect prediction models.
\newblock W: {\em Software Maintenance and Reengineering (CSMR), 2010 14th
  European Conference on},  107--116. IEEE, 2010.

\bibitem{menzies2010defect}
Menzies T., Milton Z., Turhan B., Cukic B., Jiang Y., Bener A.
\newblock Defect prediction from static code features: current results,
  limitations, new approaches.
\newblock {\em Automated Software Engineering}, 17(4):375--407, 2010.

\bibitem{mitka}
Mitka P.
\newblock Budowa modeli predykcji defektów w oparciu o metryki zmian na
  poziomie metod.
\newblock Praca magisterska, Politechnika Wroc³awska, 2014.

\bibitem{63810}
Morzy T.
\newblock {\em Eksploracja danych}.
\newblock Wydawnictwo Naukowe PWN, Warszawa, 2013.

\bibitem{nguyen2010studying}
Nguyen T.~H., Adams B., Hassan A.~E.
\newblock Studying the impact of dependency network measures on software
  quality.
\newblock W: {\em Software Maintenance (ICSM), 2010 IEEE International
  Conference on},  1--10. IEEE, 2010.

\bibitem{posnett2011ecological}
Posnett D., Filkov V., Devanbu P.
\newblock Ecological inference in empirical software engineering.
\newblock W: {\em Proceedings of the 2011 26th IEEE/ACM International
  Conference on Automated Software Engineering},  362--371. IEEE Computer
  Society, 2011.

\bibitem{rahman2011bugcache}
Rahman F., Posnett D., Hindle A., Barr E., Devanbu P.
\newblock Bugcache for inspections: hit or miss?
\newblock W: {\em Proceedings of the 19th ACM SIGSOFT symposium and the 13th
  European conference on Foundations of software engineering},  322--331. ACM,
  2011.

\bibitem{riaz2009systematic}
Riaz M., Mendes E., Tempero E.
\newblock A systematic review of software maintainability prediction and
  metrics.
\newblock W: {\em Proceedings of the 2009 3rd International Symposium on
  Empirical Software Engineering and Measurement},  367--377. IEEE Computer
  Society, 2009.

\bibitem{sliwerski2005changes}
{\'S}liwerski J., Zimmermann T., Zeller A.
\newblock When do changes induce fixes?
\newblock {\em ACM sigsoft software engineering notes}, 30(4):1--5, 2005.

\bibitem{zimmermann2006fine}
Zimmermann T.
\newblock Fine-grained processing of cvs archives with apfel.
\newblock W: {\em Proceedings of the 2006 OOPSLA workshop on eclipse technology
  eXchange},  16--20. ACM, 2006.

\end{thebibliography}
